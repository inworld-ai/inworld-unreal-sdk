
name: Build SDK (Win)

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build-win:
    strategy:
      matrix:
        ue-version: ['5.0', '5.1', '5.2', '5.3', '5.4']
    runs-on: [ self-hosted, Windows, X64, w10-1344 ]
    steps:
    - uses: actions/checkout@v2
    - name: git-update-dependecies
      run: git submodule update --init --recursive | Write-Host
    - name: Find NDK SHA
      run: |
        $INWORLD_NDK_SHA=(git submodule status).Trim().Split()[0]
        echo $INWORLD_NDK_SHA
        Add-Content -Path ${env:GITHUB_ENV} -Value "INWORLD_NDK_SHA=$INWORLD_NDK_SHA"
    - uses: actions/cache/restore@v3
      id: ndk-cache-win64
      with:
        path: InworldAI\inworld-ndk\build\Package
        key: ${{ runner.OS }}-ndk-cache-Win64-${{ env.INWORLD_NDK_SHA }}
        fail-on-cache-miss: true
        enableCrossOsArchive: true
    - name: check-cache-success
      shell: pwsh
      if: steps.ndk-cache-win64.outputs.cache-hit != 'true'
      run: |
        echo "cache restore failed"
        exit 1
    - name: Copy NDK
      run: |
          $pythonPath = (Get-Command python.exe).Source
          $process = Start-Process -FilePath $pythonPath -Wait -NoNewWindow -PassThru -ArgumentList build-scripts\ndk-util.py,--copy
          if($process.ExitCode -ne 0)
          {
            exit 1
          }
    - name: Copy Template - First Person
      shell: pwsh
      run: |
          Copy-Item -Path "C:\Program Files\Epic Games\UE_${{ matrix.ue-version }}\Templates\TP_FirstPerson"  -Destination "TP_FirstPerson" -Recurse
    - name: Copy Plugins & Remove Assets
      shell: pwsh
      run: |
          Remove-Item "InworldAI\Content\*" -Recurse -ErrorAction SilentlyContinue
          Remove-Item "TP_FirstPerson\Plugins\InworldAI" -Recurse -ErrorAction SilentlyContinue
          Remove-Item "TP_FirstPerson\Plugins\InworldMetahuman" -Recurse -ErrorAction SilentlyContinue
          Remove-Item "TP_FirstPerson\Plugins\InworldInnequin" -Recurse -ErrorAction SilentlyContinue
          Copy-Item -Path "InworldAI"  -Destination "TP_FirstPerson\Plugins\InworldAI" -Recurse
          Copy-Item -Path "InworldMetahuman"  -Destination "TP_FirstPerson\Plugins\InworldMetahuman" -Recurse
          Copy-Item -Path "InworldInnequin"  -Destination "TP_FirstPerson\Plugins\InworldInnequin" -Recurse
    - name: BuildEditor-Win-${{ matrix.ue-version }}
      shell: pwsh
      run: |
          [string]$UEPath = "C:\Program Files\Epic Games\UE_${{ matrix.ue-version }}"
          [string]$ProjectPath = "$pwd"
          Start-Process -FilePath "$UEPath\Engine\Build\BatchFiles\RunUAT.bat" -ArgumentList BuildEditor,-Project="$ProjectPath\TP_FirstPerson\TP_FirstPerson.uproject",-platform=Win64,-notools,-configuration=Development+Shipping," > BuildEditorLog.txt" -Wait -NoNewWindow -PassThru
          cat BuildEditorLog.txt
          if (Select-String -Path BuildEditorLog.txt -Pattern "BUILD SUCCESSFUL" -SimpleMatch -Quiet)
          {
            exit 0
          }
          else
          {
            exit 1
          }
    - name: BuildGame-Win-${{ matrix.ue-version }}
      shell: pwsh
      run: |
          [string]$UEPath = "C:\Program Files\Epic Games\UE_${{ matrix.ue-version }}"
          [string]$ProjectPath = "$pwd"
          Start-Process -FilePath "$UEPath\Engine\Build\BatchFiles\RunUAT.bat" -ArgumentList BuildGame,-Project="$ProjectPath\TP_FirstPerson\TP_FirstPerson.uproject",-platform=Win64,-notools,-configuration=Development+Shipping," > BuildGameLog.txt" -Wait -NoNewWindow -PassThru
          cat BuildGameLog.txt
          if (Select-String -Path BuildGameLog.txt -Pattern "BUILD SUCCESSFUL" -SimpleMatch -Quiet)
          {
            exit 0
          }
          else
          {
            exit 1
          }
    - name: BuildPlugin-Win-${{ matrix.ue-version }}
      shell: pwsh
      run: |
          [string]$UEPath = "C:\Program Files\Epic Games\UE_${{ matrix.ue-version }}"
          [string]$ProjectPath = "$pwd"
          Start-Process -FilePath "$UEPath\Engine\Build\BatchFiles\RunUAT.bat" -ArgumentList BuildPlugin,-plugin="$ProjectPath\TP_FirstPerson\Plugins\InworldAI\InworldAI.uplugin",-TargetPlatforms=Win64,-package="$ProjectPath\PluginBuild"," > BuildPluginLog.txt" -Wait -NoNewWindow -PassThru
          cat BuildPluginLog.txt
          if (Select-String -Path BuildPluginLog.txt -Pattern "BUILD SUCCESSFUL" -SimpleMatch -Quiet)
          {
            exit 0
          }
          else
          {
            exit 1
          }
