
name: Build NDK (Mac)

on:
  workflow_call:

jobs:
  build-ndk-mac:
    runs-on: [ self-hosted, macOS, ARM64, m1-1317 ]
    steps:
    - name: Cleanup build folder
      run: |
        ls -la ./
        rm -rf ./* || true
        rm -rf ./.??* || true
        ls -la ./
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: git-update-dependecies
      run: git submodule update --init --recursive
    - name: Find NDK SHA
      run: |
        INWORLD_NDK_SHA=$(git submodule status | cut -d " " -f 2)
        echo $INWORLD_NDK_SHA
        echo "INWORLD_NDK_SHA=$INWORLD_NDK_SHA" >> $GITHUB_ENV
    - uses: actions/cache/restore@v4
      id: ndk-cache-mac
      with:
        path: InworldAI/inworld-ndk/build/Package
        key: ndk-cache-Mac-${{ env.INWORLD_NDK_SHA }}
        enableCrossOsArchive: true
    - name: git-update-dependecies
      if: steps.ndk-cache-mac.outputs.cache-hit != 'true'
      run: git submodule update --init --recursive
    - name: Build NDK (Mac)
      shell: bash
      if: steps.ndk-cache-mac.outputs.cache-hit != 'true'
      run: |
        python3 "scripts/ndk/ndk-util.py" --clean
        sudo xcode-select -s /Applications/Xcode_13_0.app/Contents/Developer
        python3 "scripts/ndk/ndk-util.py" --platform=Mac --build
        rm InworldAI/inworld-ndk/build/CMakeCache.txt
        python3 "scripts/ndk/ndk-util.py" --platform=Mac-shared --build
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
    - uses: actions/cache/save@v4
      if: steps.ndk-cache-mac.outputs.cache-hit != 'true'
      with:
        path: InworldAI/inworld-ndk/build/Package
        key: ndk-cache-Mac-${{ env.INWORLD_NDK_SHA }}
        enableCrossOsArchive: true
    - uses: actions/upload-artifact@v4
      with:
        name: NDK-Mac
        path: |
          InworldAI/inworld-ndk/build/Package
